@model DAWebPhone.Models.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<h2 style="color:red;text-align:center">Thêm sản phẩm</h2>
<script>
    function ChI(UploaImage, previewImg) {
        if (UploaImage.files && UploaImage.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $(previewImg).attr('src', e.target.result);
            }
            reader.readAsDataURL(UploaImage.files[0]);
        }
    }
</script>

@using (Html.BeginForm("Add","Product", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="container">
        <div class="row">
            <div class="col-12 col-md-4">
                <img src="~/Images/ProImg/iPhone14_Plus.png" id="previewImg" style="width:100%;border:2px solid black"/>
                <input type="file" name="UploadImage" onchange="ChI(this,document.getElementById('previewImg')) " />
            </div>
            <div class="col-12 col-md-8">
                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.ProName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ProName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.HiddenFor(model => model.SalePercent)
                            @Html.ValidationMessageFor(model => model.SalePercent, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.HiddenFor(model => model.ImgList, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ProDescription, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RAM, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.RAM, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RAM, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CPU, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CPU, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CPU, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Capacity, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Capacity, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Capacity, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">

                        <div class="col-md-10">
                            @Html.HiddenFor(model => model.Hot, new { htmlAttributes = new { @class = "form-control" } })

                        </div>
                    </div>

                    <div class="form-group">

                        <div class="col-md-10">
                            @Html.HiddenFor(model => model.New, new { htmlAttributes = new { @class = "form-control" } })

                        </div>
                    </div>

                    <div class="form-group">
                        <br />
                        <div class="col-md-10">
                            @{
                                Html.RenderAction("SelectBrand", "Brand");
                            }
                        </div>
                    </div>

                    <div class="form-group">
                        <br />
                        <div class="col-md-10">
                            @{
                                Html.RenderAction("SelectCate", "Category");
                            }
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <br />
                            <input type="submit" value="Xác nhận" class="btn btn-success" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script src="~/Scripts/changeImg.js"></script>