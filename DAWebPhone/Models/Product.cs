//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAWebPhone.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Globalization;
    using System.Linq;
    using System.Web;

    public partial class Product
    {
        DBWebPhoneEntities db = new DBWebPhoneEntities();
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Product()
        {
            this.Carts = new HashSet<Cart>();
            this.Devices = new HashSet<Device>();
            this.ImagesProes = new HashSet<ImagesPro>();
            SalePercent = 0;
        }

        [Display(Name = "Mã SP")]
        public int ProID { get; set; }

        [Required(ErrorMessage = "Chưa nhập tên sản phẩm")]
        [Display(Name = "Tên SP")]
        public string ProName { get; set; }

        [Range(0, 1000000000000)]
        [Required(ErrorMessage = "Chưa nhập giá")]
        [Display(Name = "Giá gốc")]
        public decimal Price { get; set; }

        [Range(0, 90)]
        [Display(Name = "Tỷ lệ giảm giá")]
        public Nullable<int> SalePercent { get; set; }
        public string BaseImg { get; set; }
        public string ImgList { get; set; }

        [Display(Name = "Mô tả")]
        public string ProDescription { get; set; }

        [Display(Name = "RAM")]
        public Nullable<int> RAM { get; set; }
        [Display(Name = "CPU")]
        public string CPU { get; set; }

        [Display(Name = "Dung lượng")]
        public string Capacity { get; set; }

        [Display(Name = "HOT!")]
        public Nullable<bool> Hot { get; set; }

        [Display(Name = "Mới")]
        public Nullable<bool> New { get; set; }

        [Display(Name = "Số lượng")]
        [NotMapped]
        public int Quantity => db.Devices.Count(a => a.ProID == ProID && a.DvStatus == 0);

        [Display(Name = "Mã nhãn hàng")]
        public Nullable<int> BraID { get; set; }

        [Display(Name = "Mã phân loại")]
        public Nullable<int> CatID { get; set; }
        public virtual Brand Brand { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Cart> Carts { get; set; }
        public virtual Category Category { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Device> Devices { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ImagesPro> ImagesProes { get; set; }
        [NotMapped]
        public HttpPostedFileBase UploadImage { get; set; }
        public List<string> ListColor()
        {
            DBWebPhoneEntities db = new DBWebPhoneEntities();
            var l = db.Devices.Where(a => a.ProID == ProID && a.DvStatus == 0).ToList();
            List<string> cl = new List<string>();
            foreach (var i in l)
                cl.Add(i.Color);
            cl = cl.Distinct().ToList();
            return cl;
        }
        public static void SetSaleAll(int x)
        {
            if (x < 0 || x > 90)
                x = 0;
            DBWebPhoneEntities db = new DBWebPhoneEntities();
            var list = db.Products.ToList();
            foreach (var i in list)
            {
                i.SalePercent = x;
            }
            db.SaveChanges();
        }
        [NotMapped]
        [Display(Name = "Giá")]
        public decimal FinalPrice
        {
            get
            {
                int x = SalePercent ?? 0;
                int kq = (int)((decimal)((decimal)Price - ((decimal)Price * x) / 100));
                kq /= 1000;
                kq *= 1000;
                return kq;
            }
        }
    }
}
